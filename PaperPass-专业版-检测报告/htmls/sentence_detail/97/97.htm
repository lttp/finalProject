<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen"><b>综合<sup>13</sup></b>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="97_local.htm">本地库<sup>13</sup></a>（<a href="97_periodical.htm">期刊<sup>5</sup></a>、<a href="97_thesis.htm">学位<sup>7</sup></a>、<a href="97_conference.htm">会议<sup>1</sup></a>、<a href="97_book.htm">图书<sup>No</sup></a>）&nbsp;&nbsp;|&nbsp;&nbsp;<a href="97_net.htm">互联网<sup></sup></a><br /></div>
<div class="zhengwen">
语句：<span class='orange' >MVC模式（Model View Controller，简称MVC）是软件工程中的一种软件架构模式，把软件系统分为模型（Model）、视图（View）和控制器（Controller）三个部分[5]。</span><br><br>
<div style="display:block;">该句相似度：<span class='orange' >63</span>%<a href='#xiugaijianyi' style='padding-left:30px;'>查看该句修改建议</a><b>（轻度相似，请酌情修改）</b><br><br></div>
在本地库和互联网共找出相似内容：13个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >63</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">软件</span>工程中<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">一种</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span>，把<span style="background:#cbcbcb">软件</span>系统<span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span>部分[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">MVC</span>(<span style="background:#cbcbcb">Model</span>-<span style="background:#cbcbcb">View</span>-<span style="background:#cbcbcb">Controller</span>)<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">一种</span>非常经典<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">三个</span>层次，分别被成为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）、<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>），它们</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……文件不再需要进行业务逻辑的处理，只负责与用户之间的界面交互，Model2的体系结构如图2.6所示。图2.6模型二的体系结构从上述介绍可以看出，Model1在实际使用过程中存在诸多缺陷，所以以MVC设计模式为基础的Model2模型在软件系统的开发过程中受到越来越多的亲睐，成为软件开发人员的首选模型，<span class='green'>MVC(Model-View-Controller)模式是一种非常经典的软件架构模式，MVC模式分为三个层次，分别被成为模型（Model）、视图（View）、控制器（Controller），它们</span>三者通过事件（Event）被MVC模式监听或触发[23]。基于J2EE和MVC设计模式的系统模型如图2.7所示。长安大学硕士学位论文图2.7基于……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于BS模式课程测评系统设计与实现》<br><b>作者：</b>张羽<br><b>分类号：</b>U49<br><b>学科专业：</b>交通信息工程及控制<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>孙朝云<br><b>学位授予单位：</b>长安大学<br><b>学位年度：</b>2012<br><b>关键词：</b>B/S结构 课程测评 JSP技术 数据库 访问权限
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >57</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">工程</span><span style="background:#cbcbcb">中</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">一种</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">把</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span><span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）<span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">模式</span>已不适应现在<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">软件</span>开发方向。<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">工程</span><span style="background:#cbcbcb">中</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">一种</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span>．<span style="background:#cbcbcb">把</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span><span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">三个</span>基本<span style="background:#cbcbcb">部分</span>：<span style="background:#cbcbcb">模型</span>(<span style="background:#cbcbcb">Model</span>)、<span style="background:#cbcbcb">视图</span>(<span style="background:#cbcbcb">View</span>)<span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>(<span style="background:#cbcbcb">Controller</span>)</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……基于MVC思想的程序设计与管理崔岢邓威(上海蓝星聚甲醛有限会司，上海200000)科技论坛摘要：目前软件开发规模不断扩大，软件的后期维护工作量也在不断加大，软件的架构模式不在是单机程序而是基于网络的c，s、b，s的方式。在这种情况下，传统的单人开发<span class='green'>模式已不适应现在的软件开发方向。MVC是软件工程中的一种软件架构模式．把软件系统分为三个基本部分：模型(Model)、视图(View)和控制器(Controller)</span>，目的是实现一种动态的程序设计，使后续对程序的修改和扩展简化，并且使程序某一部分的重复利用成为可能。控制器(Controller)：负责转发请求，对请求进行……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于MVC思想的程序设计与管理》<br><b>作者：</b>崔岢 邓威<br><b>作者单位：</b>上海蓝星聚甲醛有限公司,上海,200000<br><b>参考文献：</b>3篇<br><b>分类号：</b>TP311<br><b>机标分类号：</b>TP3 TM7<br><b>期刊名称：</b>《赤子》<br><b>出版时间：</b>2012年10期<br><b>ISSN：</b>1671-603<br><b>关键词：</b>MVC 控制器 视图 模型 软件工程<br><b>摘要：</b>目前软件开发规模不断扩大,软件的后期维护工作量也在不断加大,软件的架构模式不在是单机程序而是基于网络的c/s、b/s的方式.在这种情况下,传统的单人开发模式已不适应现在的软件开发方向.MVC是软件工程中的一种软件架构模式,把软件系统分为三个基本部分:模型(Model)、视图(View)和控制器(Controller),目的是实现一种动态的程序设计,使后续对程序的修改和扩展简化,并且使程序某一部分的重复利用成为可能.控制器(Controller):负责转发请求,对请求进行处理；视图(View):由界面设计人员进行图形界面设计;模型(Model):程序员编写程序应有的功能(实现算法等等)、数据库专家进行数据管理和数据库设计(可以实现具体的功能).本文通过借鉴MVC的架构思想,对程序设计与管理提出实现方式.在程序设计上我们应本着控制器,视图,模型三大块进行实现；在程序管理上需要界面设计人员完成视图,程序开发人员完成模型,项目核心人员完成控制器.通过上述的实现确保程序开发分工明确,后期维护思路清晰,最终实现程序的高效开发与管理.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >49</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）<span style="background:#cbcbcb">是</span>软件工程中<span style="background:#cbcbcb">的</span>一种软件架构<span style="background:#cbcbcb">模式</span>，把软件系统分为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span>部分[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">MvC</span>设计<span style="background:#cbcbcb">模式</span>。<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">Model</span>一Ⅵew．<span style="background:#cbcbcb">Controller</span><span style="background:#cbcbcb">的</span>缩写，其中<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">三个</span>模块分别代表<span style="background:#cbcbcb">模型</span>(<span style="background:#cbcbcb">Model</span>)、<span style="background:#cbcbcb">视图</span>(<span style="background:#cbcbcb">View</span>)、<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>(<span style="background:#cbcbcb">Controller</span>)。<span style="background:#cbcbcb">MVC</span>设计<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">是</span>在上世纪</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……性而诞生的，它们都遵循着统一的指导性规范，包括：“开一闭”规范(OCP)、里氏代换规范(LSP)、依赖倒转规范(DIP)、接口隔离规范(ISP)、合成/聚合复用规范(Cp心)以及笛米特法则(PLK)。综合研究各种设计模式的特点与适用场景，在集成组件接口体系的结构设计中，拟采用<span class='green'>MvC设计模式。MVC是Model一Ⅵew．Controller的缩写，其中的三个模块分别代表模型(Model)、视图(View)、控制器(Controller)。MVC设计模式，是在上世纪</span>80年代，Tu，gveReenskaug为Smalltalk一80编程语言创造推出，目前MVC设汁模式，已经随着互联网技术的快速发展，而被广泛应用于网络系统的框架设计之中[34/。……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《国产办公软件集成组件的研究与应用》<br><b>作者：</b>刘瑜<br><b>分类号：</b>TP317.1<br><b>学科专业：</b>计算机技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>李辉<br><b>学位授予单位：</b>北京化工大学<br><b>学位年度：</b>2015<br><b>关键词：</b>办公软件 集成组件 中间件技术 应用接口 消息机制
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >47</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）是软件工程中<span style="background:#cbcbcb">的</span>一种软件架构<span style="background:#cbcbcb">模式</span>，把软件系统分为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span>部分[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">可维护性及可扩展性。3.1.1<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">的</span>主要内容<span style="background:#cbcbcb">MVC</span>应用程序包含<span style="background:#cbcbcb">三个</span>核心部件：<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）、<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）。<span style="background:#cbcbcb">MVC</span>核心部件</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……能。目前基于MVC模式的Web应用软件体系结构应用广泛的四层模型将软件系统分为表示层、控制层、业务逻辑层、持久层。通过分层，将系统功能进行明确划分，每层拥有不同的职责，既有利于系统解耦，简化开发，又能增强系统的<span class='green'>可维护性及可扩展性。3.1.1MVC模式的主要内容MVC应用程序包含三个核心部件：模型（Model）、视图（View）、控制器（Controller）。MVC核心部件</span>之间的关系如图3.1所示。图3.1MVC架构图“模型”用于封装与应用程序的业务逻辑相关的数据以及对数据的处理方法（业务规则）。“模型”……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于MDA的MVC建模与模型转换技术研究》<br><b>作者：</b>王健<br><b>分类号：</b>TP311.52<br><b>学科专业：</b>计算机软件与理论<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>曾一<br><b>学位授予单位：</b>重庆大学<br><b>学位年度：</b>2010<br><b>关键词：</b>模型驱动架构 模型/视图/控制器 模型转换 查询/视图/转换 软件架构
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >46</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）是软件工程中<span style="background:#cbcbcb">的</span>一种软件架构<span style="background:#cbcbcb">模式</span>，把软件系统分为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）<span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">，升级、维护更方便，其结构如下图所示：2．2<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">的</span>结构<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>包括<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>：<span style="background:#cbcbcb">模型</span>(<span style="background:#cbcbcb">Model</span>)、<span style="background:#cbcbcb">视图</span>(<span style="background:#cbcbcb">view</span>)<span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>(<span style="background:#cbcbcb">Controller</span>)，分别对应</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……说明7Web请末在swingMVC框架中的流转生审周期．关t瑚：SpringMVC框架MVC模式控制嚣视图1引言推t鼢：犟钳1q88021，男，i擞老远^，砸±，研R方向∞12EE痲希MVC模型强制性的将应用程序的输入、处理和输出分开。在MVC架构中，通过把系统分为三个基本部分使得应用系统结构更清晰<span class='green'>，升级、维护更方便，其结构如下图所示：2．2MVC模式的结构MVC模式包括三个部分：模型(Model)、视图(view)和控制器(Controller)，分别对应</span>应用的内部数据、数据视图和输入输出控制部分”j。模型是与问题相关数据的逻辑抽象，代表对象的内在属性，是整个模型的核心。模型是真正完成任务的代码。模型……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(会议论文)：</font><br>
<b>篇名：</b>《基于Spring MVC框架的Web研究与应用》<br><b>作者：</b>梁锋 薛峰<br><b>作者单位：</b>合肥工业大学计算机与信息学院VCC研究室，安徽省 合肥市 230009<br><b>会议名称：</b>全国第22届计算机技术与应用(CACIS)学术会议暨全国第3届安全关键技术与应用(SCA)学术会议<br><b>主办单位：</b>中国系统仿真学会<br><b>会议时间：</b>2011-08-06<br><b>会议地点：</b>贵州<br><b>关键词：</b>Spring MVC框架 Web请求 流转生命周期 组成原理 应用配置
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='orange' >46</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span>模式（Model<span style="background:#cbcbcb">View</span>Controller，简称<span style="background:#cbcbcb">MVC</span>）是软件工程中的一种软件<span style="background:#cbcbcb">架构</span>模式，把软件系统分为<span style="background:#cbcbcb">模型</span>（Model）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（Controller）<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">思想，将数据<span style="background:#cbcbcb">模型</span>、数据显示以及数据<span style="background:#cbcbcb">控制</span>逻辑进行了分离。<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">架构</span>主要由<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>组成：<span style="background:#cbcbcb">模型</span>（ModeI）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）以及<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（ControIIer）。<span style="background:#cbcbcb">模型</span>，即相关</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……学家有较强可操作性，对生物信息软件开发人员有较强可重用及可扩展性的基因组可视化软件。针对上述需求，本文设计了一种基于ModeI-View-ControIIe（r模型-视图-控制器，简称MVC）架构[2]的可重用的基因组可l基于MVC架构的基因组可视化系统1.1设计思想MVC架构模式是采用“分治”的<span class='green'>思想，将数据模型、数据显示以及数据控制逻辑进行了分离。MVC架构主要由三个部分组成：模型（ModeI）、视图（View）以及控制器（ControIIer）。模型，即相关</span>数据的集合，是对象的内在属性。通常采用面向对象的方法，将问题领域中的对象抽象为应用程序的对象，其中封装了对象的属性和这些对象背后的业务逻辑。……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于MVC架构的基因组序列信息可视化工具》<br><b>作者：</b>王海沿 鲁强 曾绍群 李亦学<br><b>作者单位：</b>华中科技大学生物医学光子学教育部重点实验室,武汉,430074；上海生物信息技术研究中心,上海,200235<br><b>参考文献：</b>6篇<br><b>页码：</b>P27—P30<br><b>页数：</b>4页<br><b>机标分类号：</b>TP3 V21<br><b>基金项目：</b>国家高技术研究发展计划(863计划)(2002AA234051,2003AA231011)<br><b>期刊名称：</b>《高技术通讯》<br><b>出版时间：</b>2004年10期<br><b>期刊级别：</b>ISTIC - PKU<br><b>ISSN：</b>1002-0470<br><b>关键词：</b>MVC架构 基因组 可视化 可重用<br><b>摘要：</b>探讨了一种基于Model-View-Controller架构开发基因组序列可视化工具的方法.按照模型、视图、控制器的设计思想划分软件架构,在Java平台上开发了具有良好可操作性、可重用性以及可扩展性的基因组序列信息可视化工具.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">7</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）<span style="background:#cbcbcb">是</span>软件工程中<span style="background:#cbcbcb">的</span>一种软件架构<span style="background:#cbcbcb">模式</span>，把软件系统分为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）三个部分[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">体系。Struts<span style="background:#cbcbcb">是</span>第一个真正意义上按照<span style="background:#cbcbcb">MVC</span>设计<span style="background:#cbcbcb">模式</span>搭建起来<span style="background:#cbcbcb">的</span>Web开发框架。Struts对<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）、<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）都提供了相应<span style="background:#cbcbcb">的</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……应用程序，使软件系统的开发实现了界面与逻辑的很好分离，逻辑变得清晰。但在使用MVC设计过程中，容易出现一些问题，如：编写控制器（Controller）时会出现多个控制器，同时，在控制器中对于导航的处理也比较麻烦。故由MVC提出了Web框架。JavaWeb开发中，发展最成熟的三个框架是SSH开发的基本Web框架<span class='green'>体系。Struts是第一个真正意义上按照MVC设计模式搭建起来的Web开发框架。Struts对MVC的模型（Model）、视图（View）、控制器（Controller）都提供了相应的</span>组件支持。担。ActionForm负责提交表单数据，实际上充当了数据载体的JavaBean对象。Strust1框架中，使用继承ActionForm的formbean对象来封装表单数据，完成表单数据的初始化和验证……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《Java MVC 模式在管理信息系统开发中的应用》<br><b>作者：</b>田丰 邹国忠<br><b>作者单位：</b>玉溪师范学院信息技术工程学院<br><b>页码：</b>P269—P270<br><b>期刊名称：</b>《中小企业管理与科技》<br><b>出版时间：</b>2012年25期<br><b>ISSN：</b>1673-1069<br><b>关键词：</b>设计模式 界面 业务逻辑Web框架<br><b>摘要：</b>在 Java Web 开发中,界面和业务逻辑的分离给软件开发带来许多好处,如:使得开发思路清晰、软件维护容易等.对于软件开发来说,选择什么设计模式式直接影响软件的质量.在 Java 技术中,使用 MVC 开发模式变得越来越流行.但是,对于许多开发者来说,应该怎么使用 MVC 模式还存在疑问.本文以一个管理信息系统的开发为例,说明 MVC 模式的使用方式,并通过 MVC 模式衍生出其他高级 Web 框架.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">8</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）<span style="background:#cbcbcb">是</span>软件工程中的一种软件<span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span>，把软件系统分为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）三个部分[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">备忘录<span style="background:#cbcbcb">模式</span>、命令<span style="background:#cbcbcb">模式</span>、状态<span style="background:#cbcbcb">模式</span>、访问者<span style="background:#cbcbcb">模式</span>等等。2．3<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span>：<span style="background:#cbcbcb">模型</span>一<span style="background:#cbcbcb">视图</span>一<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>(<span style="background:#cbcbcb">Model</span>—<span style="background:#cbcbcb">View</span>—<span style="background:#cbcbcb">Controller</span>)，M<span style="background:#cbcbcb">是</span>指数据<span style="background:#cbcbcb">模型</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……等。设计模式常常划分成不同的种类，常见的种类有：创建型设计模式j如工厂方法式、抽象工厂模式、原型模式、单例模式，建造模式等。结构型设计模式，如组合模式、装饰模式、代理模式、享元模式、门面式、桥梁模式等。行为型模式，如模版方法模式、观察者模式、迭代子模式、责任链模式、<span class='green'>备忘录模式、命令模式、状态模式、访问者模式等等。2．3MVC架构模式MVC架构模式：模型一视图一控制器(Model—View—Controller)，M是指数据模型</span>，V是指用户界面，C则是控制器。使用MVC的目的是将M和V的实现代工程量造价软件的设计与实现第二章架构模式与设计模式的理论研究码分离……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《工程量造价软件的设计与实现》<br><b>作者：</b>潘亚雄<br><b>分类号：</b>F426.9<br><b>学科专业：</b>软件工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>钱乐秋<br><b>学位授予单位：</b>复旦大学<br><b>学位年度：</b>2008<br><b>关键词：</b>造价软件 软件架构 软件设计 建筑行业 工程量
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">9</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，<span style="background:#cbcbcb">简称</span><span style="background:#cbcbcb">MVC</span>）<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">软件</span>工程中<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">一种</span><span style="background:#cbcbcb">软件</span>架构<span style="background:#cbcbcb">模式</span>，把<span style="background:#cbcbcb">软件</span>系统分为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）三个部分[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">元素<span style="background:#cbcbcb">的</span>新操作。6、<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>(<span style="background:#cbcbcb">模型</span>—<span style="background:#cbcbcb">视图</span>—<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span><span style="background:#cbcbcb">模式</span>)<span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">一种</span>目前广泛流行<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">软件</span>设计<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">Model</span>--<span style="background:#cbcbcb">View</span>--<span style="background:#cbcbcb">Controller</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">简称</span>，即<span style="background:#cbcbcb">模型</span>一</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……各元素的类的前提一1-定义作用1i这些<span class='green'>元素的新操作。6、MVC模式(模型—视图—控制器模式)MVC模式是一种目前广泛流行的软件设计模式，是Model--View--Controller的简称，即模型一</span>视图—控制器模式。早在20世纪70年代，IBM就推出了Sanfronscisico第三章基于MVC模式的Web应用框架研究项El计划，开始了MVC设计模式的研究，20世纪80年代在编程语言……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于MVC模式Web应用框架的研究开发和应用》<br><b>作者：</b>王向中<br><b>分类号：</b>TP312<br><b>学科专业：</b>计算机科学与技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>王应喜<br><b>学位授予单位：</b>南京工业大学<br><b>学位年度：</b>2009<br><b>关键词：</b>Web服务 软件复用 MVC模式 教学辅助软件
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">10</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称<span style="background:#cbcbcb">MVC</span>）是<span style="background:#cbcbcb">软件</span>工程中<span style="background:#cbcbcb">的</span>一种<span style="background:#cbcbcb">软件</span>架构<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">把</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span>分为<span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、视图（<span style="background:#cbcbcb">View</span>）<span style="background:#cbcbcb">和</span>控制器（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>[37]（<span style="background:#cbcbcb">Model</span>-<span style="background:#cbcbcb">View</span>-<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">把</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span>合适<span style="background:#cbcbcb">三个</span>基本<span style="background:#cbcbcb">部分</span>：<span style="background:#cbcbcb">模型</span>实体<span style="background:#cbcbcb">模型</span><span style="background:#cbcbcb">和</span>业务逻辑，<span style="background:#cbcbcb">View</span>东西负责显示由<span style="background:#cbcbcb">模型</span>包含<span style="background:#cbcbcb">的</span>数据，用于与用户交互，<span style="background:#cbcbcb">Controller</span>对象是</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……象，代办包含解析目标东西提供全数方式。图4.6AoP实现事理对象数据分派为构建Web应用供应对象一个功能角色的MVC框架[36]，它是一种高度可配置的MVC框架，可以定制本地化和主题分化，并供应多种视图技术，实现了控制器、模型东西和分拨器对象以及处理程序东西的多脚色分离，这种分离使得它们更容易接受定制。<span class='green'>MVC模式[37]（Model-View-Controller）把软件系统合适三个基本部分：模型实体模型和业务逻辑，View东西负责显示由模型包含的数据，用于与用户交互，Controller对象是</span>介于View进行Model之间的桥梁，它可以分发和处理用户进行请求，选择切合的视图更加显示模型包含的数据返回给用户。管理模式能很好地分离视图层和业务处理层，通过对……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于Spring MVC框架和TRBAC访问控制模型的工作流系统的设计》<br><b>作者：</b>王旺<br><b>分类号：</b>TP393.08<br><b>学科专业：</b>计算机技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>余小强<br><b>学位授予单位：</b>合肥工业大学<br><b>学位年度：</b>2014<br><b>关键词：</b>工作流系统 访问控制模 任务实例 角色权限 动态分配 安全性 web应用
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">11</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >MVC<span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，简称MVC）是<span style="background:#cbcbcb">软件</span>工程中<span style="background:#cbcbcb">的</span>一种<span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">架构</span><span style="background:#cbcbcb">模式</span>，把<span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span><span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（<span style="background:#cbcbcb">View</span>）<span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">式<span style="background:#cbcbcb">系统</span><span style="background:#cbcbcb">和</span>拥有用户图形界面<span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">架构</span>设计1，z3。眦<span style="background:#cbcbcb">模式</span>将用户界面程序<span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>：<span style="background:#cbcbcb">模型</span>(<span style="background:#cbcbcb">Model</span>)、<span style="background:#cbcbcb">视图</span>(<span style="background:#cbcbcb">View</span>)<span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>(<span style="background:#cbcbcb">Controller</span>)c¨。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……分离出来，并采用CORBA分布对象机制提高系统可扩展性，为面向分布式实时交互式系统的设计提供了高效可扩展的软件参考模型。关键词：舭}C0秘认；软件模式；软件体系结构中图分类号：TP311文献标识码：A1引言MVC(ModelViewController，简称MVC)是由Smalltalk-80引入的一种面向对象的设计模式，广泛应用于交互<span class='green'>式系统和拥有用户图形界面软件系统的架构设计1，z3。眦模式将用户界面程序分为三个部分：模型(Model)、视图(View)和控制器(Controller)c¨。</span>模型是业务流程/状态的处理以及业务规则的制定，模型接受视图请求的数据，并返回最终处理结果。当状态改变时，它会通知相应的View进行更新。视图代表用户交互……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于CORBA的分布式MVC软件体系结构》<br><b>作者：</b>李明 王怀民 尹刚<br><b>作者单位：</b>国防科技大学计算机学院,湖南,长沙,410073<br><b>参考文献：</b>4篇<br><b>被引次数：</b>2次（统计时间：2015年8月）<br><b>页码：</b>P95—P97<br><b>页数：</b>3页<br><b>分类号：</b>TP311<br><b>机标分类号：</b>TP3 P22<br><b>期刊名称：</b>《计算机工程与科学》<br><b>出版时间：</b>2008年5期<br><b>期刊级别：</b>ISTIC - PKU<br><b>ISSN：</b>1007-130X<br><b>关键词：</b>MVC CORBA 软件模式 软件体系结构<br><b>摘要：</b>MVC作为一种经典的软件模式,在界面程序设计和B/S系统中得到广泛应用,但对于分布式实时交互应用而言,其高效性和可扩展性等仍有待提高.本文深入分析了MVC软件模式的结构特点,提出一种基于CORBA的分布式MVC软件体系结构SEV.SEV将动态数据处理从模型中分离出来,并采用CORBA分布对象机制提高系统可扩展性,为面向分布式实时交互式系统的设计提供了高效可扩展的软件参考模型.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">12</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span>ViewController，简称<span style="background:#cbcbcb">MVC</span>）是<span style="background:#cbcbcb">软件</span>工程中<span style="background:#cbcbcb">的</span>一种<span style="background:#cbcbcb">软件</span>架构<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">把</span><span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span><span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">模型</span>（<span style="background:#cbcbcb">Model</span>）、<span style="background:#cbcbcb">视图</span>（View）和<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>（Controller）<span style="background:#cbcbcb">三个</span><span style="background:#cbcbcb">部分</span>[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">MVC</span>(<span style="background:#cbcbcb">Model</span>．Ⅵew—con仃oller)<span style="background:#cbcbcb">软件</span>开发设计<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">把</span>应用<span style="background:#cbcbcb">软件</span><span style="background:#cbcbcb">系统</span><span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">三个</span>主要<span style="background:#cbcbcb">部分</span>：<span style="background:#cbcbcb">模型</span>、<span style="background:#cbcbcb">视图</span>、<span style="background:#cbcbcb">控制</span><span style="background:#cbcbcb">器</span>。这种开发<span style="background:#cbcbcb">的</span>逻辑<span style="background:#cbcbcb">模式</span>由于可以很好<span style="background:#cbcbcb">的</span>解决web应用<span style="background:#cbcbcb">软件</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……，只需要操作系统中自带的浏览器就可以调用服务器端的数据，例如亚马逊网上书店、百度地图、WEBGIS等应用程序。常用2．2逻辑架构逻辑架构主要是将软件划分为不同功能的模块并确定不同模块之间的相关性。本文将以国际微软公司的软件开发逻辑架构为例来说明逻辑架构的作用。2．2．1MVC开发模式<span class='green'>MVC(Model．Ⅵew—con仃oller)软件开发设计模式，把应用软件系统分为三个主要部分：模型、视图、控制器。这种开发的逻辑模式由于可以很好的解决web应用软件</span>设计架构上的不足，所有更适合于w曲开发。MVc设计模式实现了软件系统分层思想，但其自身有一定局限，所以只能算是一种松耦合方式的开发模式。在一定程度……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《浅谈面向对象开发思想与软件设计架构分析》<br><b>作者：</b>林越 王翠珍<br><b>作者单位：</b>哈尔滨师范大学地理科学学院,黑龙江哈尔滨,150000<br><b>参考文献：</b>18篇<br><b>页码：</b>P152—P154<br><b>页数：</b>3页<br><b>分类号：</b>TP313<br><b>基金项目：</b>国家自然科学基金面上项目(41371397)<br><b>期刊名称：</b>《信息通信》<br><b>出版时间：</b>2016年3期<br><b>ISSN：</b>1673-1131<br><b>关键词：</b>面向对象编程 MVC MVP MVVM<br><b>摘要：</b>在信息科学与计算机技术快速发展的背景下,软件程序已经成为我们日常工作和生活中最常用的工具.导致应用软件的开发效率、执行效率、维护效率变得至关重要,这就促使软件的开发思想和设计架构模式必须不断的进行完善.文章介绍了当今软件开发中主流的编程思想(OOP,Object-Oriented-Programming)及其国际微软公司的主流软件设计架构模式(MVC、MVP、MVVM)的原理分析.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">13</div>
<font color="#666666">相似度：</font><span class='orange' >40</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' ><span style="background:#cbcbcb">MVC</span><span style="background:#cbcbcb">模式</span>（<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">Controller</span>，<span style="background:#cbcbcb">简称</span><span style="background:#cbcbcb">MVC</span>）<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">软件</span>工程中<span style="background:#cbcbcb">的</span>一种<span style="background:#cbcbcb">软件</span>架构<span style="background:#cbcbcb">模式</span>，把<span style="background:#cbcbcb">软件</span>系统<span style="background:#cbcbcb">分为</span>模型（<span style="background:#cbcbcb">Model</span>）、视图（<span style="background:#cbcbcb">View</span>）和控制器（<span style="background:#cbcbcb">Controller</span>）<span style="background:#cbcbcb">三个</span>部分[5]。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">Model</span>．<span style="background:#cbcbcb">View</span>．<span style="background:#cbcbcb">Controller</span>，<span style="background:#cbcbcb">简称</span><span style="background:#cbcbcb">MVC</span>)，<span style="background:#cbcbcb">是</span>当前最流行<span style="background:#cbcbcb">的</span>实现用户界面<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">软件</span>设计<span style="background:#cbcbcb">模式</span>之一【17】。<span style="background:#cbcbcb">MVC</span>设计<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">的</span>核心理念<span style="background:#cbcbcb">是</span>将一个<span style="background:#cbcbcb">软件</span>应用程序<span style="background:#cbcbcb">分为</span><span style="background:#cbcbcb">三个</span>相互关联<span style="background:#cbcbcb">的</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……户端的开发。而且所有资源都是通过URL寻址，因此在资源的获取上不再需要使用其他手段对资源进行定位。相对于使用其他方式构建的软件，REST的独立性和灵活性更加出色，特别是得益于其平台的无关性，使得使用REST构建的软件具有极强的兼容性和持续发展能力。2．3．1MVC模式介绍模型．视图．控制器(<span class='green'>Model．View．Controller，简称MVC)，是当前最流行的实现用户界面的软件设计模式之一【17】。MVC设计模式的核心理念是将一个软件应用程序分为三个相互关联的</span>部分，从用户交互的角度对信息进行分离【1引。最初提出MVC设计模式的意图是用于桌面图形用户界面(GUI)的开发[19，201，但随着该设计模式的不断扩展……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《集成多控制器的软件定义网络管理平台的研究》<br><b>作者：</b>李银平<br><b>学科专业：</b>计算机系统结构<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>李克秋<br><b>学位授予单位：</b>大连理工大学<br><b>学位年度：</b>2016
</td>
</tr>
</table>




<div style="display:block;">
<table id="xiugaijianyi" width="100%" cellpadding="3" cellspacing="3" style="margin-bottom:15px;margin-top:15px;border: 1px solid #C0C0C0;"
bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF">
<tbody>
<tr>
<td width="100%">
<div class="green" style="font-size:17px;padding-left:5px;">
该句修改建议（轻度相似，请酌情修改）
</div>
</td>
</tr>
<tr>
<td>
<div class="shubu">
1
</div>
<span style="  padding-left:10px;font-size:15px;">
原句与相似内容重合部分（重点修改标红部分）：
</span>
</td>
</tr>
<tr>
<td>
<font class="green">
<span class="red">MVC</span><span class="red">模式</span>（<span class="red">Model</span><span class="red">View</span><span class="red">Controller</span>，简称<span class="red">MVC</span>）是<span class="red">软件</span>工程中的<span class="red">一种</span><span class="red">软件</span><span class="red">架构</span><span class="red">模式</span>，把<span class="red">软件</span>系统<span class="red">分为</span><span class="red">模型</span>（<span class="red">Model</span>）、<span class="red">视图</span>（<span class="red">View</span>）和<span class="red">控制</span>器（<span class="red">Controller</span>）<span class="red">三个</span>部分[5]。
</font>
</td>
</tr>
<tr>
<td>
<div class="shubu">
2
</div>
<span style="  padding-left:10px;font-size:15px;">
同义词：
</span>
</td>
</tr>
<tr>
<td width="100%" align="left">
<span class="red">模型：</span><span class="green">模子 </span><br/> <span class="red">控制：</span><span class="green">节制 </span><br/> <span class="red">部分：</span><span class="green">部门 </span><br/>
</td>
</tr>
</tbody>
</table>
</div>

<div style="display:block;">
<a href="#">回到顶部</a>
</div>

<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2017 PaperPass
</p>
</div>
<div style="margin-bottom:700px"></div>
</body>
</html>
