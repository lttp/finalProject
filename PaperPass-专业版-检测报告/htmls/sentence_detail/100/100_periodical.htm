<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen"><a href="100.htm">综合<sup>10</sup></a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="100_local.htm">本地库<sup>10</sup></a>（<b>期刊<sup>5</sup></b>、<a href="100_thesis.htm">学位<sup>4</sup></a>、<a href="100_conference.htm">会议<sup>1</sup></a>、<a href="100_book.htm">图书<sup>No</sup></a>）&nbsp;&nbsp;|&nbsp;&nbsp;<a href="100_net.htm">互联网<sup></sup></a><br /></div>
<div class="zhengwen">
语句：<span class='red' >Controller对象是介于Model与View之间的桥梁，它可以分发和处理用户的请求，选择适当的视图用于显示模型包含的数据返回给用户。</span><br><br>
<div style="display:none;">该句相似度：<span class='red' >88</span>%<a href='#xiugaijianyi' style='padding-left:30px;'>查看该句修改建议</a><b>（ChaoXidudutishiTorpalces87sbqwopahasw4）</b><br><br></div>
在学术期刊库中共找出相似内容：5个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >69</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">Controller</span>对象是介于<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">与</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">之间</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">桥梁</span>，<span style="background:#cbcbcb">它</span><span style="background:#cbcbcb">可以</span>分发和处理<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">请求</span>，<span style="background:#cbcbcb">选择</span>适当<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">视图</span><span style="background:#cbcbcb">用于</span><span style="background:#cbcbcb">显示</span>模型包含<span style="background:#cbcbcb">的</span>数据返回给<span style="background:#cbcbcb">用户</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">。<span style="background:#cbcbcb">Controller</span>层是<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">与</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">之间</span>沟通<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">桥梁</span>，<span style="background:#cbcbcb">它</span><span style="background:#cbcbcb">可以</span>分派<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">请求</span>并<span style="background:#cbcbcb">选择</span>恰当<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">视图</span>以<span style="background:#cbcbcb">用于</span><span style="background:#cbcbcb">显示</span>，同时<span style="background:#cbcbcb">它</span>也<span style="background:#cbcbcb">可以</span>解释<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……3个单词的缩写，分别为：模型(Model)，视图(View)和控制Controller)。MVC模式的目的就是实现Web系统的职能分工。Model层实现系统中的业务逻辑，通常可以用JavaBean或EJB来实现。View层用于与用户的交互．通常用JSP来实现<span class='green'>。Controller层是Model与View之间沟通的桥梁，它可以分派用户的请求并选择恰当的视图以用于显示，同时它也可以解释用户的</span>输入并将它们映射为模型层可执行的操作。(1)模型层(也称业务层)用于处理程序逻辑。它的任务是管理……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于MVC框架移动实习就业跟踪系统设计与实现》<br><b>作者：</b>张秀杰 金忠伟<br><b>作者单位：</b>黑龙江职业学院,哈尔滨,150080<br><b>参考文献：</b>3篇<br><b>页码：</b>P42—P43,67<br><b>页数：</b>3页<br><b>基金项目：</b>基于MVC框架的“移动实习就业跟踪系统”设计与实现是黑龙江职业学院重点培育课题“移动实习就业跟踪系统”开发与应用的研究(YJP201309的科研成果)<br><b>期刊名称：</b>《电脑编程技巧与维护》<br><b>出版时间：</b>2014年22期<br><b>ISSN：</b>1006-4052<br><b>关键词：</b>MVC框架 移动实习就业跟踪系统 设计与实现<br><b>摘要：</b>在简单介绍MVC框架实现的基础上,结合设计模式的思想,实现基于JSP+ Servlet+ JavaBean的模式在Java Web中移动实习就业跟踪系统的设计,重点讨论了在MVC框架中应用设计模式,达到系统和控制层、模型层、视图层的实现,为业务流程的开发及功能的扩展带来了灵活性.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >68</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">Controller</span>对象是介于<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">与</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">之间</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">桥梁</span>，<span style="background:#cbcbcb">它</span><span style="background:#cbcbcb">可以</span>分发和处理<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">请求</span>，<span style="background:#cbcbcb">选择</span>适当<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">视图</span><span style="background:#cbcbcb">用于</span><span style="background:#cbcbcb">显示</span>模型包含<span style="background:#cbcbcb">的</span>数据返回给<span style="background:#cbcbcb">用户</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">Controller</span>控制器是<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">与</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">之间</span>沟通<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">桥梁</span>，<span style="background:#cbcbcb">它</span><span style="background:#cbcbcb">可以</span>分派<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">请求</span>并<span style="background:#cbcbcb">选择</span>恰当<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">视图</span>以<span style="background:#cbcbcb">用于</span><span style="background:#cbcbcb">显示</span>，同时<span style="background:#cbcbcb">它</span>也<span style="background:#cbcbcb">可以</span>解释<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……RSS阅读器构建第6期子视图(用户部件)组成；也可以继承母板页MasterPage。子视图可以是最简单HTML部件、服务器部件或多个部件嵌套构而成的Web自定义部件或Web页面。本系统中视图如图2所示。包括TreeView、GridView、图2<span class='green'>Controller控制器是Model与View之间沟通的桥梁，它可以分派用户的请求并选择恰当的视图以用于显示，同时它也可以解释用户的</span>输入并将它们映射为模型层可执行的操作。在．NET中每个aspx对应了一个后端代码aspx．CS，可以通过aspx．cs方便地……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于MVC模式的简易RSS阅读器构建》<br><b>作者：</b>徐晓<br><b>作者单位：</b>江南大学信息工程学院,江苏,无锡,214122<br><b>参考文献：</b>4篇<br><b>页码：</b>P34—P35<br><b>页数：</b>2页<br><b>分类号：</b>TP302.1<br><b>机标分类号：</b>P61 TP3<br><b>期刊名称：</b>《安徽电子信息职业技术学院学报》<br><b>出版时间：</b>2008年6期<br><b>ISSN：</b>1671-802X<br><b>关键词：</b>MVC模式 RSS 视图 控制器 模型<br><b>摘要：</b>本文介绍了MVC模型的基本组成结构以及RSS工具包,并以"简易RSS阅读器"框架设计为例,详细介绍其在asp.net环境下的具体实现.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >46</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >Controller对象是介于Model<span style="background:#cbcbcb">与</span>View之间<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">桥梁</span>，<span style="background:#cbcbcb">它</span><span style="background:#cbcbcb">可以</span>分发和处理<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">请求</span>，<span style="background:#cbcbcb">选择</span>适当<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">视图</span><span style="background:#cbcbcb">用于</span><span style="background:#cbcbcb">显示</span>模型包含<span style="background:#cbcbcb">的</span>数据返回给<span style="background:#cbcbcb">用户</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">J2EEWeb开发中<span style="background:#cbcbcb">的</span>研究<span style="background:#cbcbcb">与</span>实现35<span style="background:#cbcbcb">桥梁</span>，<span style="background:#cbcbcb">它</span><span style="background:#cbcbcb">可以</span>分派<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">请求</span>并<span style="background:#cbcbcb">选择</span>恰当<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">视图</span>以<span style="background:#cbcbcb">用于</span><span style="background:#cbcbcb">显示</span>，同时<span style="background:#cbcbcb">它</span>也<span style="background:#cbcbcb">可以</span>解释<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……，可以完成什么样的用户请求．控制层并不做任何的数据处理．控制层是Model与View之间沟通的作者简介：叶春风(1979-)，女，河北枣强县人，衡水学院数学与计算机科学系教师，理学硕士万方数据优第4期叶春风MVC设计模式在<span class='green'>J2EEWeb开发中的研究与实现35桥梁，它可以分派用户的请求并选择恰当的视图以用于显示，同时它也可以解释用户的</span>输入并将它们映射为模型层可执行的操作．例如，用户点击一个连接，控制层接受请求后，并不处理业务信息，它只把……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《MVC设计模式在J2EE Web开发中的研究与实现》<br><b>作者：</b>叶春凤<br><b>作者单位：</b>衡水学院,数学与计算机科学系,河北,衡水,053000<br><b>参考文献：</b>1篇<br><b>被引次数：</b>1次（统计时间：2015年8月）<br><b>页码：</b>P34—P36<br><b>页数：</b>3页<br><b>分类号：</b>TP312<br><b>机标分类号：</b>G42 TP3<br><b>期刊名称：</b>《衡水学院学报》<br><b>出版时间：</b>2008年4期<br><b>ISSN：</b>1673-2065<br><b>关键词：</b>MVC J2EE 设计模式<br><b>摘要：</b>MVC是一种目前广泛流行的软件设计模式,随着J2EE(Java 2 Enterprise Edition)的成熟,它正在成为在J2EE平台上推荐的一种设计模型,其目的就是实现Web系统的职能分工.MVC是把一个应用的输入、处理、输出流程按照Model、View、Controller的方式进行分离,其优势在于层与层之间各司其职,互不干涉;其缺点是设计实现并不十分容易.MVC的实现策略与以往软件不同,从而使MVC基本构架更加适合软件开发者的需要.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">Controller</span>对象是介于<span style="background:#cbcbcb">Model</span>与<span style="background:#cbcbcb">View</span>之间<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">桥梁</span>，<span style="background:#cbcbcb">它</span>可以分发<span style="background:#cbcbcb">和</span>处理<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span>请求，选择适当<span style="background:#cbcbcb">的</span>视图用于显示模型包含<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">数据</span>返回给<span style="background:#cbcbcb">用户</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">Controller</span>)。控制器作为连接<span style="background:#cbcbcb">Model</span><span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">View</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">桥梁</span>，是MVC模式<span style="background:#cbcbcb">的</span>中间部分，<span style="background:#cbcbcb">它</span>负责接收<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span>输入，按照<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">数据</span>进行响应。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……不存在任何业务处理代码，视图在本质上可以看做是一个可以输出数据、用户能够进行操作的界面。另外，一个视图只能对应一个控制器。视图在集成开发环境中，以ASP.NET为基础通过对控件的拖动来实现页面的开发。3.3控制器(<span class='green'>Controller)。控制器作为连接Model和View的桥梁，是MVC模式的中间部分，它负责接收用户的输入，按照用户的数据进行响应。</span>即控制器对模型、视图部分进行交互协调，使模块和相应的视图相互匹配，进行相应的操作，最后向视图输出数据并且呈现处理结果……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《ASP.NET MVC开发模式研究》<br><b>作者：</b>况蔚林<br><b>作者单位：</b>武警上海总队,上海,200000<br><b>参考文献：</b>6篇<br><b>页码：</b>P159—P159<br><b>页数：</b>1页<br><b>期刊名称：</b>《黑龙江科技信息》<br><b>出版时间：</b>2015年21期<br><b>ISSN：</b>1673-1328<br><b>关键词：</b>MVC ASP.NET 模式<br><b>摘要：</b>MVC模式将一个系统划分成类模型层、视图层和控制层三个部分，使程序结构变得更加清晰灵活，现已成为一种普遍流行的软件设计模式。本文通过对MVC模式原理研究为基础，深入分析了这一复合编程模式，详细阐述了MVC模式的运行机制及自身特点，并结合ASP.NET框架解释了框架与模式之间的关系。
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >40</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">Controller</span>对象是介于Model<span style="background:#cbcbcb">与</span>View<span style="background:#cbcbcb">之间</span><span style="background:#cbcbcb">的</span>桥梁，<span style="background:#cbcbcb">它</span><span style="background:#cbcbcb">可以</span>分发<span style="background:#cbcbcb">和</span>处理<span style="background:#cbcbcb">用户</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">请求</span>，选择适当<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">视图</span>用于显示<span style="background:#cbcbcb">模型</span>包含<span style="background:#cbcbcb">的</span>数据返回给<span style="background:#cbcbcb">用户</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">Controller</span>)：<span style="background:#cbcbcb">可以</span>理解为联系<span style="background:#cbcbcb">模型</span><span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">视图</span><span style="background:#cbcbcb">之间</span><span style="background:#cbcbcb">的</span>纽带，控制<span style="background:#cbcbcb">模型</span><span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">视图</span><span style="background:#cbcbcb">之间</span><span style="background:#cbcbcb">的</span>交互过程，<span style="background:#cbcbcb">它</span>从<span style="background:#cbcbcb">用户</span>接收<span style="background:#cbcbcb">请求</span>，将<span style="background:#cbcbcb">模型</span><span style="background:#cbcbcb">与</span><span style="background:#cbcbcb">视图</span>匹</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……视图会得到通知，把表示模型数据及逻辑关系和状态的信息以特定形式展示给用户。对于相同的信息可以有多个不同的显示形式或视图，显示从模型中提取的数据。视图对象可以是一组可视化的元素，如对话框、表单等。控制器(<span class='green'>Controller)：可以理解为联系模型和视图之间的纽带，控制模型和视图之间的交互过程，它从用户接收请求，将模型与视图匹</span>配在一起，共同完成用户的请求。控制器就是一个分发器，用来选择模型和视图。控制器并不做任何数据处理。例如，用户点击一个……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于MVC模式的地图控件的设计》<br><b>作者：</b>田新丽 白绳武 董秋鸿<br><b>作者单位：</b>西安电子科技大学,技术物理学院,陕西,西安,710071<br><b>参考文献：</b>3篇<br><b>页码：</b>P41—P42,45<br><b>分类号：</b>TP391.41<br><b>机标分类号：</b>TP3 P20<br><b>期刊名称：</b>《电子科技》<br><b>出版时间：</b>2010年6期<br><b>ISSN：</b>1007-7820<br><b>关键词：</b>MVC模式 C语言 控件<br><b>摘要：</b>MVC模式是目前广泛应用的设计模式,是为需要同样数据提供多个视图应用程序而设计的.MVC模式增加了程序的可维护性、可扩展性.文中在研究、分析MVC设计模式思想的基础上,应用MVC设计模式以及C语言实现了一个地图控件,并取得了比较好的效果.
</td>
</tr>
</table>




<div style="display:none;">
<table id="xiugaijianyi" width="100%" cellpadding="3" cellspacing="3" style="margin-bottom:15px;margin-top:15px;border: 1px solid #C0C0C0;"
bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF">
<tbody>
<tr>
<td width="100%">
<div class="green" style="font-size:17px;padding-left:5px;">
该句修改建议（ChaoXidudutishiTorpalces87sbqwopahasw4）
</div>
</td>
</tr>
<tr>
<td>
<div class="shubu">
1
</div>
<span style="  padding-left:10px;font-size:15px;">
原句与相似内容重合部分（重点修改标红部分）：
</span>
</td>
</tr>
<tr>
<td>
<font class="green">

</font>
</td>
</tr>
<tr>
<td>
<div class="shubu">
2
</div>
<span style="  padding-left:10px;font-size:15px;">
同义词：
</span>
</td>
</tr>
<tr>
<td width="100%" align="left">
<span class="red">适当：</span><span class="green">得当 恰当 适合 </span><br/> <span class="red">模型：</span><span class="green">模子 </span><br/> <span class="red">包含：</span><span class="green">包括 包罗 搜罗 </span><br/>
</td>
</tr>
</tbody>
</table>
</div>

<div style="display:block;">
<a href="#">回到顶部</a>
</div>

<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2017 PaperPass
</p>
</div>
<div style="margin-bottom:700px"></div>
</body>
</html>
